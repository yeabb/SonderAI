# Generated by Django 5.1.4 on 2024-12-21 01:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TweetNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Short title to the post (max 25 characters).', max_length=25)),
                ('content', models.TextField(help_text='The text content of the tweet (max 280 characters).', max_length=280)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The timestamp when the tweet was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The timestamp when the tweet was last updated.')),
                ('number_of_likes', models.PositiveIntegerField(default=0, help_text='The number of likes the tweet has.')),
                ('number_of_retweets', models.PositiveBigIntegerField(default=0, help_text='The number of retweets the tweet has.')),
                ('is_retweet', models.BooleanField(default=False, help_text='Indicates whether this is a retweet.')),
                ('liked_by', models.ManyToManyField(blank=True, help_text='Users who liked this tweet.', related_name='liked_posts', to=settings.AUTH_USER_MODEL)),
                ('original_tweet', models.ForeignKey(blank=True, help_text='Reference to the original tweet if this is a retweet.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='retweets_set', to='tweets.tweetnode')),
                ('parent_node', models.ForeignKey(blank=True, help_text='The parent node of the thread if this is part of a thread.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_tweets', to='tweets.tweetnode')),
                ('replies', models.ManyToManyField(blank=True, help_text='Replies to this tweet.', related_name='parent_tweets', to='tweets.tweetnode')),
                ('retweeted_by', models.ManyToManyField(blank=True, help_text='Users who retweeted this tweet.', related_name='retweeted_tweets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='The user who created the tweet.', on_delete=django.db.models.deletion.CASCADE, related_name='tweets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tweet Node',
                'verbose_name_plural': 'Tweet Nodes',
                'ordering': ['-created_at'],
            },
        ),
    ]
